import{_ as o,c as a,b as n,o as l}from"./chunks/framework.E7rrtXIC.js";const y=JSON.parse('{"title":"Geolocation API","description":"","frontmatter":{},"headers":[{"level":2,"title":"Geolocation 对象","slug":"geolocation-对象","link":"#geolocation-对象","children":[{"level":3,"title":"Geolocation.getCurrentPosition()","slug":"geolocation-getcurrentposition","link":"#geolocation-getcurrentposition","children":[]},{"level":3,"title":"Geolocation.watchPosition()","slug":"geolocation-watchposition","link":"#geolocation-watchposition","children":[]},{"level":3,"title":"Geolocation.clearWatch()","slug":"geolocation-clearwatch","link":"#geolocation-clearwatch","children":[]}]},{"level":2,"title":"Coordinates 对象","slug":"coordinates-对象","link":"#coordinates-对象","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"relativePath":"basic/webapi/geolocation.md","filePath":"basic/webapi/geolocation.md"}'),e={name:"basic/webapi/geolocation.md"};function p(c,s,t,i,r,E){return l(),a("div",null,[...s[0]||(s[0]=[n(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /basic/webapi/geolocation.md for this page in Markdown format</div><h1 id="geolocation-api" tabindex="-1">Geolocation API <a class="header-anchor" href="#geolocation-api" aria-label="Permalink to &quot;Geolocation API&quot;">​</a></h1><p>Geolocation API 用于获取用户的地理位置。</p><p>由于该功能涉及用户隐私，所以浏览器会提示用户，是否同意给出地理位置，用户可能会拒绝。另外，这个 API 只能在 HTTPS 环境使用。</p><p>浏览器通过<code>navigator.geolocation</code>属性提供该 API。</p><h2 id="geolocation-对象" tabindex="-1">Geolocation 对象 <a class="header-anchor" href="#geolocation-对象" aria-label="Permalink to &quot;Geolocation 对象&quot;">​</a></h2><p><code>navigator.geolocation</code>属性返回一个 Geolocation 对象。该对象具有以下三个方法。</p><ul><li><code>Geolocation.getCurrentPosition()</code>：返回一个 Position 对象，表示用户的当前位置。</li><li><code>Geolocation.watchPosition()</code>：指定一个监听函数，每当用户的位置发生变化，就执行该监听函数。</li><li><code>Geolocation.clearWatch()</code>：取消<code>watchPosition()</code>方法指定的监听函数。</li></ul><h3 id="geolocation-getcurrentposition" tabindex="-1">Geolocation.getCurrentPosition() <a class="header-anchor" href="#geolocation-getcurrentposition" aria-label="Permalink to &quot;Geolocation.getCurrentPosition()&quot;">​</a></h3><p><code>Geolocation.getCurrentPosition()</code>方法用于获取用户的位置。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">navigator.geolocation.</span><span style="color:#B392F0;">getCurrentPosition</span><span style="color:#E1E4E8;">(success, error, options)</span></span></code></pre></div><p>该方法接受三个参数。</p><ul><li><code>success</code>：用户同意给出位置时的回调函数，它的参数是一个 Position 对象。</li><li><code>error</code>：用户拒绝给出位置时的回调函数，它的参数是一个 PositionError 对象。该参数可选。</li><li><code>options</code>：参数对象，该参数可选。</li></ul><p>Position 对象有两个属性。</p><ul><li><code>Position.coords</code>：返回一个 Coordinates 对象，表示当前位置的坐标。</li><li><code>Position.timestamp</code>：返回一个对象，代表当前时间戳。</li></ul><p>PositionError 对象主要有两个属性。</p><ul><li><code>PositionError.code</code>：整数，表示发生错误的原因。<code>1</code>表示无权限，有可能是用户拒绝授权；<code>2</code>表示无法获得位置，可能设备有故障；<code>3</code>表示超时。</li><li><code>PositionError.message</code>：字符串，表示错误的描述。</li></ul><p>参数对象<code>option</code>可以指定三个属性。</p><ul><li><code>enableHighAccuracy</code>：布尔值，是否返回高精度结果。如果设为<code>true</code>，可能导致响应时间变慢或（移动设备的）功耗增加；反之，如果设为<code>false</code>，设备可以更快速地响应。默认值为<code>false</code>。</li><li><code>timeout</code>：正整数，表示等待查询的最长时间，单位为毫秒。默认值为<code>Infinity</code>。</li><li><code>maximumAge</code>：正整数，表示可接受的缓存最长时间，单位为毫秒。如果设为<code>0</code>，表示不返回缓存值，必须查询当前的实际位置；如果设为<code>Infinity</code>，必须返回缓存值，不管缓存了多少时间。默认值为<code>0</code>。</li></ul><p>下面是一个例子。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> options </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  enableHighAccuracy: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  timeout: </span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  maximumAge: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> success</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">pos</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> crd </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pos.coords;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`经度：\${</span><span style="color:#E1E4E8;">crd</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">latitude</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`纬度：\${</span><span style="color:#E1E4E8;">crd</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">longitude</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`误差：\${</span><span style="color:#E1E4E8;">crd</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">accuracy</span><span style="color:#9ECBFF;">} 米\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`ERROR(\${</span><span style="color:#E1E4E8;">err</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">code</span><span style="color:#9ECBFF;">}): \${</span><span style="color:#E1E4E8;">err</span><span style="color:#9ECBFF;">.</span><span style="color:#E1E4E8;">message</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">navigator.geolocation.</span><span style="color:#B392F0;">getCurrentPosition</span><span style="color:#E1E4E8;">(success, error, options);</span></span></code></pre></div><h3 id="geolocation-watchposition" tabindex="-1">Geolocation.watchPosition() <a class="header-anchor" href="#geolocation-watchposition" aria-label="Permalink to &quot;Geolocation.watchPosition()&quot;">​</a></h3><p><code>Geolocation.watchPosition()</code>对象指定一个监听函数，每当用户的位置发生变化，就是自动执行这个函数。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">navigator.geolocation.</span><span style="color:#B392F0;">watchPosition</span><span style="color:#E1E4E8;">(success[, error[, options]])</span></span></code></pre></div><p>该方法接受三个参数。</p><ul><li><code>success</code>：监听成功的回调函数，该函数的参数为一个 Position 对象。</li><li><code>error</code>：该参数可选，表示监听失败的回调函数，该函数的参数是一个 PositionError 对象。</li><li><code>options</code>：该参数可选，表示监听的参数配置对象。</li></ul><p>该方法返回一个整数值，表示监听函数的编号。该整数用来供<code>Geolocation.clearWatch()</code>方法取消监听。</p><p>下面是一个例子。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> id;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> target </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  latitude : </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  longitude: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> options </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  enableHighAccuracy: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  timeout: </span><span style="color:#79B8FF;">5000</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  maximumAge: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> success</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">pos</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  var</span><span style="color:#E1E4E8;"> crd </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> pos.coords;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (target.latitude </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> crd.latitude </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> target.longitude </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> crd.longitude) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;恭喜，你已经到达了指定位置。&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    navigator.geolocation.</span><span style="color:#B392F0;">clearWatch</span><span style="color:#E1E4E8;">(id);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#B392F0;"> error</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">err</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">warn</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ERROR(&#39;</span><span style="color:#F97583;"> +</span><span style="color:#E1E4E8;"> err.code </span><span style="color:#F97583;">+</span><span style="color:#9ECBFF;"> &#39;): &#39;</span><span style="color:#F97583;"> +</span><span style="color:#E1E4E8;"> err.message);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> navigator.geolocation.</span><span style="color:#B392F0;">watchPosition</span><span style="color:#E1E4E8;">(success, error, options);</span></span></code></pre></div><h3 id="geolocation-clearwatch" tabindex="-1">Geolocation.clearWatch() <a class="header-anchor" href="#geolocation-clearwatch" aria-label="Permalink to &quot;Geolocation.clearWatch()&quot;">​</a></h3><p><code>Geolocation.clearWatch()</code>方法用来取消<code>watchPosition()</code>方法指定的监听函数。它的参数是<code>watchPosition()</code>返回的监听函数的编号。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">navigator.geolocation.</span><span style="color:#B392F0;">clearWatch</span><span style="color:#E1E4E8;">(id);</span></span></code></pre></div><p>使用方法的例子见上一节。</p><h2 id="coordinates-对象" tabindex="-1">Coordinates 对象 <a class="header-anchor" href="#coordinates-对象" aria-label="Permalink to &quot;Coordinates 对象&quot;">​</a></h2><p>Coordinates 对象是地理位置的坐标接口，<code>Position.coords</code>属性返回的就是这个对象。</p><p>它有以下属性，全部为只读属性。</p><ul><li><code>Coordinates.latitude</code>：浮点数，表示纬度。</li><li><code>Coordinates.longitude</code>：浮点数，表示经度。</li><li><code>Coordinates.altitude</code>：浮点数，表示海拔（单位：米）。如果不可得，返回<code>null</code>。</li><li><code>Coordinates.accuracy</code>：浮点数，表示经度和纬度的精度（单位：米）。</li><li><code>Coordinates.altitudeAccuracy</code>：浮点数，表示海拔的精度（单位：米）。返回<code>null</code>。</li><li><code>Coordinates.speed</code>：浮点数，表示设备的速度（单位：米/秒）。如果不可得，返回<code>null</code>。</li><li><code>Coordinates.heading</code>：浮点数，表示设备前进的方向（单位：度）。方向按照顺时针，北方是0度，东方是90度，西方是270度。如果<code>Coordinates.speed</code>为0，<code>heading</code>属性返回<code>NaN</code>。如果设备无法提供方向信息，该属性返回<code>null</code>。</li></ul><p>下面是一个例子。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">navigator.geolocation.</span><span style="color:#B392F0;">getCurrentPosition</span><span style="color:#E1E4E8;">( </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">position</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> lat </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> position.coords.latitude;</span></span>
<span class="line"><span style="color:#F97583;">  let</span><span style="color:#E1E4E8;"> long </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> position.coords.longitude;</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`纬度：\${</span><span style="color:#E1E4E8;">lat</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toFixed</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`经度：\${</span><span style="color:#E1E4E8;">long</span><span style="color:#9ECBFF;">.</span><span style="color:#B392F0;">toFixed</span><span style="color:#9ECBFF;">(</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API" target="_blank" rel="noreferrer">Geolocation API</a>, by MDN</li></ul>`,41)])])}const F=o(e,[["render",p]]);export{y as __pageData,F as default};
