import{_ as a,c as l,b as n,o}from"./chunks/framework.E7rrtXIC.js";const y=JSON.parse('{"title":"其他标签","description":"","frontmatter":{},"headers":[{"level":2,"title":"<dialog>","slug":"dialog","link":"#dialog","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"JavaScript API","slug":"javascript-api","link":"#javascript-api","children":[]},{"level":3,"title":"事件","slug":"事件","link":"#事件","children":[]}]},{"level":2,"title":"<details>，<summary>","slug":"details-summary","link":"#details-summary","children":[{"level":3,"title":"基本用法","slug":"基本用法-1","link":"#基本用法-1","children":[]},{"level":3,"title":"JavaScript API","slug":"javascript-api-1","link":"#javascript-api-1","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"relativePath":"basic/html/elements.md","filePath":"basic/html/elements.md"}'),p={name:"basic/html/elements.md"};function e(t,s,c,r,i,E){return o(),l("div",null,[...s[0]||(s[0]=[n(`<div style="display:none;" hidden="true" aria-hidden="true">Are you an LLM? You can read better optimized documentation at /basic/html/elements.md for this page in Markdown format</div><h1 id="其他标签" tabindex="-1">其他标签 <a class="header-anchor" href="#其他标签" aria-label="Permalink to &quot;其他标签&quot;">​</a></h1><p>本章介绍一些最新引入标准的标签。</p><h2 id="dialog" tabindex="-1"><code>&lt;dialog&gt;</code> <a class="header-anchor" href="#dialog" aria-label="Permalink to &quot;\`&lt;dialog&gt;\`&quot;">​</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h3><p><code>&lt;dialog&gt;</code>标签表示一个可以关闭的对话框。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dialog</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  Hello world</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dialog</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面就是一个最简单的对话框。</p><p>默认情况下，对话框是隐藏的，不会在网页上显示。如果要让对话框显示，必须加上<code>open</code>属性。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dialog</span><span style="color:#B392F0;"> open</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  Hello world</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dialog</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面代码会在网页显示一个方框，内容是<code>Hello world</code>。</p><p><code>&lt;dialog&gt;</code>元素里面，可以放入其他 HTML 元素。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dialog</span><span style="color:#B392F0;"> open</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">form</span><span style="color:#B392F0;"> method</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;dialog&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">input</span><span style="color:#B392F0;"> type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;text&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;submit&quot;</span><span style="color:#B392F0;"> value</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;foo&quot;</span><span style="color:#E1E4E8;">&gt;提交&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;/</span><span style="color:#85E89D;">form</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dialog</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面的对话框里面，有一个输入框和提交按钮。</p><p>注意，上例中<code>&lt;form&gt;</code>的<code>method</code>属性设为<code>dialog</code>，这时点击提交按钮，对话框就会消失。但是，表单不会提交到服务器，浏览器会将表单元素的<code>returnValue</code>属性设为 Submit 按钮的<code>value</code>属性（上例是<code>foo</code>）。</p><h3 id="javascript-api" tabindex="-1">JavaScript API <a class="header-anchor" href="#javascript-api" aria-label="Permalink to &quot;JavaScript API&quot;">​</a></h3><p><code>&lt;dialog&gt;</code>元素的 JavaScript API 提供<code>Dialog.showModal()</code>和<code>Dialog.close()</code>两个方法，用于打开/关闭对话框。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> modal</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;dialog&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对话框显示，相当于增加 open 属性</span></span>
<span class="line"><span style="color:#E1E4E8;">modal.</span><span style="color:#B392F0;">showModal</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对话框关闭，相当于移除 open 属性</span></span>
<span class="line"><span style="color:#E1E4E8;">modal.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">();</span></span></code></pre></div><p>开发者可以提供关闭按钮，让其调用<code>Dialog.close()</code>方法，关闭对话框。</p><p><code>Dialog.close()</code>方法可以接受一个字符串作为参数，用于传递信息。<code>&lt;dialog&gt;</code>接口的<code>returnValue</code>属性可以读取这个字符串，否则<code>returnValue</code>属性等于提交按钮的<code>value</code>属性。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">modal.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Accepted&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">modal.returnValue </span><span style="color:#6A737D;">// &quot;Accepted&quot;</span></span></code></pre></div><p><code>Dialog.showModal()</code>方法唤起对话框时，会有一个透明层，阻止用户与对话框外部的内容互动。CSS 提供了一个 Dialog 元素的<code>::backdrop</code>伪类，用于选中这个透明层，因此可以编写样式让透明层变得可见。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">dialog</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">  padding</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">  border</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">  border-radius</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0.6</span><span style="color:#F97583;">rem</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">  box-shadow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#79B8FF;"> 0</span><span style="color:#79B8FF;"> 1</span><span style="color:#F97583;">em</span><span style="color:#79B8FF;"> black</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#85E89D;">dialog</span><span style="color:#B392F0;">::backdrop</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  /* make the backdrop a semi-transparent black */</span></span>
<span class="line"><span style="color:#79B8FF;">  background-color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">rgba</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">0.4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><p>上面代码不仅为<code>&lt;dialog&gt;</code>指定了样式，还将对话框的透明层变成了灰色透明。</p><p><code>&lt;dialog&gt;</code>元素还有一个<code>Dialog.show()</code>方法，也能唤起对话框，但是没有透明层，用户可以与对话框外部的内容互动。</p><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h3><p><code>&lt;dialog&gt;</code>元素有两个事件，可以监听。</p><ul><li><code>close</code>：对话框关闭时触发</li><li><code>cancel</code>：用户按下<code>esc</code>键关闭对话框时触发</li></ul><p>如果希望用户点击透明层，就关闭对话框，可以用下面的代码。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">modal.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;click&#39;</span><span style="color:#E1E4E8;">, (</span><span style="color:#FFAB70;">event</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (event.target </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> modal) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    modal.</span><span style="color:#B392F0;">close</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;cancelled&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><h2 id="details-summary" tabindex="-1"><code>&lt;details&gt;</code>，<code>&lt;summary&gt;</code> <a class="header-anchor" href="#details-summary" aria-label="Permalink to &quot;\`&lt;details&gt;\`，\`&lt;summary&gt;\`&quot;">​</a></h2><h3 id="基本用法-1" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法-1" aria-label="Permalink to &quot;基本用法&quot;">​</a></h3><p><code>&lt;details&gt;</code>标签用来折叠内容，浏览器会折叠显示该标签的内容。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">details</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">这是一段解释文本。</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">details</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面的代码在浏览器里面，会折叠起来，显示<code>Details</code>，前面有一个三角形，就像下面这样。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">▶ Details</span></span></code></pre></div><p>用户点击这段文本，折叠的文本就会展开，显示详细内容。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">▼ Details</span></span>
<span class="line"><span style="color:#E1E4E8;">这是一段解释文本。</span></span></code></pre></div><p>再点击一下，展开的文本又会重新折叠起来。</p><p><code>&lt;details&gt;</code>标签的<code>open</code>属性，用于默认打开折叠。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">details</span><span style="color:#B392F0;"> open</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">这是一段解释文本。</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">details</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面代码默认打开折叠。</p><p><code>&lt;summary&gt;</code>标签用来定制折叠内容的标题。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">details</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">&gt;这是标题&lt;/</span><span style="color:#85E89D;">summary</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  这是一段解释文本。</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">details</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div><p>上面的代码显示结果如下。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">▶ 这是标题</span></span></code></pre></div><p>点击后，展示的效果如下。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">▼ 这是标题</span></span>
<span class="line"><span style="color:#E1E4E8;">这是一段解释文本。</span></span></code></pre></div><p>通过 CSS 设置<code>summary::-webkit-details-marker</code>，可以改变标题前面的三角箭头。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">summary</span><span style="color:#B392F0;">::-webkit-details-marker</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">  background</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">url</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">https://example.com/foo.svg</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#79B8FF;">  color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">transparent</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><p>下面的样式是另一种替换箭头的方法。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#85E89D;">summary</span><span style="color:#B392F0;">::-webkit-details-marker</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">  display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">none</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#85E89D;">summary</span><span style="color:#B392F0;">:before</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#79B8FF;">  content</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\2714</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">  color</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">#696f7c</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#79B8FF;">  margin-right</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><h3 id="javascript-api-1" tabindex="-1">JavaScript API <a class="header-anchor" href="#javascript-api-1" aria-label="Permalink to &quot;JavaScript API&quot;">​</a></h3><p><code>Details</code>元素的<code>open</code>属性返回<code>&lt;details&gt;</code>当前是打开还是关闭。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#79B8FF;"> details</span><span style="color:#F97583;"> =</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;details&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (detail.open </span><span style="color:#F97583;">===</span><span style="color:#79B8FF;"> true</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;">  // 展开状态</span></span>
<span class="line"><span style="color:#E1E4E8;">} </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">  // 折叠状态</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre></div><p><code>Details</code>元素有一个<code>toggle</code>事件，打开或关闭折叠时，都会触发这个事件。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">details.</span><span style="color:#B392F0;">addEventListener</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;toggle&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">event</span><span style="color:#F97583;"> =&gt;</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#F97583;">  if</span><span style="color:#E1E4E8;"> (details.open) {</span></span>
<span class="line"><span style="color:#6A737D;">    /* 展开状况 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    /* 折叠状态 */</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li><a href="https://keithjgrant.com/posts/2018/meet-the-new-dialog-element/" target="_blank" rel="noreferrer">Meet the New Dialog Element</a>, Keith J. Grant</li><li><a href="https://blog.logrocket.com/the-dialog-element-the-way-to-create-tomorrows-modal-windows-f1d4ab14380b" target="_blank" rel="noreferrer">The dialog element: The way to create tomorrow’s modal windows</a>, Abhishek Jakhar</li><li><a href="https://css-tricks.com/quick-reminder-that-details-summary-is-the-easiest-way-ever-to-make-an-accordion/" target="_blank" rel="noreferrer">Details/Summary is the Easiest Way Ever to Make an Accordion</a>, Chris Coyier</li></ul>`,59)])])}const g=a(p,[["render",e]]);export{y as __pageData,g as default};
